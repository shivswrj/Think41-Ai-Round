version: '3.8'

services:
  # Database
  database:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: chatbot_db
      POSTGRES_USER: chatbot_user
      POSTGRES_PASSWORD: chatbot_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chatbot_user -d chatbot_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build: ./backend
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://chatbot_user:chatbot_password@database:5432/chatbot_db
      - GROQ_API_KEY=${GROQ_API_KEY}
      - FRONTEND_URL=http://localhost:3000
    ports:
      - "5000:5000"
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./backend:/app
    restart: unless-stopped

  # Frontend
  frontend:
    build: ./frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=http://localhost:5000
    restart: unless-stopped

volumes:
  postgres_data: